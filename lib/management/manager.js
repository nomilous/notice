// Generated by CoffeeScript 1.6.3
var authenticator, missingConfig, testable;

authenticator = require('./authenticator').authenticator;

missingConfig = require('../notice/errors').missingConfig;

testable = void 0;

module.exports._manager = function() {
  return testable;
};

module.exports.manager = function(config) {
  var authenticate, hostname, listen, local, port, server, transport;
  if (config == null) {
    config = {};
  }
  try {
    listen = config.manager.listen;
  } catch (_error) {}
  try {
    authenticate = authenticator(config);
  } catch (_error) {}
  if (listen == null) {
    throw missingConfig('config.manager.listen', 'manage');
  }
  if (typeof listen.port !== 'number') {
    throw missingConfig('config.manager.listen.port', 'manage');
  }
  transport = (listen.cert != null) && (listen.key != null) ? 'https' : 'http';
  hostname = listen.hostname != null ? listen.hostname : '127.0.0.1';
  port = listen.port;
  testable = local = {};
  server = (function() {
    if (transport === 'https') {
      try {
        return require(transport).createServer();
      } catch (_error) {}
    }
  })();
  server || (server = require('http').createServer());
  return server.listen(port, hostname, function() {
    var address, _ref;
    _ref = server.address(), address = _ref.address, port = _ref.port;
    return console.log('API @ %s://%s:%s', transport, address, port);
  });
};
