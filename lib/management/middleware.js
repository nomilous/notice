// Generated by CoffeeScript 1.6.3
var argumentException, testable;

argumentException = require('../notice/errors').argumentException;

testable = void 0;

module.exports._middleware = function() {
  return testable;
};

module.exports.middleware = function(config) {
  var api, local;
  if (config == null) {
    config = {};
  }
  testable = local = {
    slots: {},
    bottomSlot: 0,
    array1: [],
    array2: [],
    active: 'array1',
    nextSlot: function() {
      return ++local.bottomSlot;
    },
    update: function(_arg) {
      var description, enabled, fn, slot, title;
      slot = _arg.slot, title = _arg.title, description = _arg.description, enabled = _arg.enabled, fn = _arg.fn;
      if (slot == null) {
        slot = local.nextSlot();
      }
      if (typeof slot !== 'number') {
        throw argumentException('opts.slot', 'notice.use(opts, fn)', 'as number');
      }
      if (!((title != null) && (fn != null))) {
        throw argumentException('opts.title and fn', 'notice.use(opts, fn)');
      }
      if (typeof fn !== 'function') {
        throw argumentException('fn', 'notice.use(opts, fn)', 'as function');
      }
      if (slot > local.bottomSlot) {
        local.bottomSlot = slot + 1;
      }
      local.slots[slot] = arguments[0];
      return local.reload();
    },
    reload: function() {
      var next;
      next = local.active === 'array1' ? 'array2' : 'array1';
      return local.active = next;
    },
    runningArray: function() {
      return local[local.active];
    }
  };
  return api = {
    update: local.update,
    runningArray: local.runningArray
  };
};
