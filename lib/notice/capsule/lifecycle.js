// Generated by CoffeeScript 1.6.3
var capsule, deferred;

deferred = require('also').deferred;

capsule = require('./capsule').capsule;

module.exports.lifecycle = function(type, config) {
  var local;
  if (config == null) {
    config = {};
  }
  return local = {
    cache: {},
    config: (function() {
      try {
        return config.capsule[type];
      } catch (_error) {}
    })(),
    Capsule: capsule(),
    create: deferred(function(_arg, properties) {
      var assign, cap, done, key, resolve;
      resolve = _arg.resolve;
      if (properties == null) {
        properties = {};
      }
      cap = new local.Capsule;
      cap.set({
        _type: type,
        "protected": true,
        hidden: true
      });
      for (key in properties) {
        if (key !== type) {
          cap[key] = properties[key];
          continue;
        }
        assign = {};
        assign[key] = properties[key];
        assign["protected"] = true;
        cap.set(assign);
      }
      try {
        if (local.config.before) {
          done = function() {
            return resolve(cap);
          };
          return local.config.before(done, cap);
        }
      } catch (_error) {}
      return resolve(new local.Capsule);
    })
  };
};
