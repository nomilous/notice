// Generated by CoffeeScript 1.6.3
var fs, http, https, socketio, start, transport;

http = require('http');

https = require('https');

fs = require('fs');

socketio = require('socket.io');

transport = 'http';

start = function(opts) {
  if ((opts.cert != null) && (opts.key != null)) {
    try {
      transport = 'https';
      return https.createServer({
        key: fs.readFileSync(opts.key),
        cert: fs.readFileSync(opts.cert)
      });
    } catch (_error) {}
  }
  transport = 'http';
  return http.createServer();
};

module.exports.listen = function(opts, callback) {
  var io, server;
  opts || (opts = {});
  opts.port || (opts.port = null);
  opts.address || (opts.address = 'localhost');
  server = opts.server || start(opts);
  io = socketio.listen(server);
  io.configure(function() {
    return io.set('log level', opts.loglevel || 1);
  });
  if (opts.server == null) {
    server.on('error', function(error) {
      return callback(error);
    });
    server.listen(opts.port, opts.address, function() {
      var address, port, _ref;
      _ref = server.address(), address = _ref.address, port = _ref.port;
      console.log('listening @ %s://%s:%s', transport, address, port);
      return callback(null, {
        transport: transport,
        address: address,
        port: port
      });
    });
  }
  return io;
};
