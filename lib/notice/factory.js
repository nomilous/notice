// Generated by CoffeeScript 1.4.0
var Factory, Message, asResolver, isMiddleWare, pipeline;

pipeline = require('when/pipeline');

Message = require('./message');

isMiddleWare = require('./decorators').isMiddleware;

asResolver = require('./decorators').asResolver;

module.exports = Factory = {
  create: function(origin) {
    var middleware, notifier,
      _this = this;
    if (typeof origin !== 'string') {
      throw new Error('Factory.create( origin ) require message origin as string');
    }
    middleware = [];
    notifier = function() {
      var fn, functions, message;
      message = new Message;
      message.label = arguments[0];
      message.description = arguments[1];
      functions = [];
      return pipeline((function() {
        var _i, _len, _results;
        _results = [];
        for (_i = 0, _len = middleware.length; _i < _len; _i++) {
          fn = middleware[_i];
          functions.unshift(fn);
          _results.push(function() {
            return functions.pop()(message);
          });
        }
        return _results;
      })());
    };
    notifier.use = isMiddleWare(asResolver(function(fn) {
      return middleware.push(fn);
    }));
    return notifier;
  }
};
