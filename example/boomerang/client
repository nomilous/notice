#! /usr/bin/env coffee

notice = require '../../lib/notice'

Tosser = notice.client

    capsule: 

        Object1: 

            #
            # * does not wait for remote pipeline traversal
            # * once emitted, capsule never returns to the client
            #

            boomerang: false

            #
            # * boomerang defaults to true
            # * Object2 will return after the hubside traversal
            #

            before: (done, capsule) -> 

                capsule.sentAt = new Date
                done()

        Object2: 

            before: (done, capsule) -> 

                capsule.requestedAt = new Date
                done()


Tosser.create 

    title: 'Arm'
    connect: 
        adaptor:   'socket.io'
        url:       'http://localhost:12121'
        secret:    'secret'

    (err, emit) -> 

        return console.log err if err?


        setInterval (->

            emit.Object1 never: 'to be seen again', (err, capsule) -> 

                #
                # * set to not boomerang
                # * this callback fires when the hub acks
                # 

                console.log 'hub acknowledged', capsule



            emit.Object2 please: 'get something', (err, capsule) -> 

                #
                # * set to not boomerang
                # * this callback fires when the hub acks
                # 

                console.log 'hub returned final capsule', capsule

        #     #
        #     # AMPLIFY LOADING
        #     #
        #     emit.Object2 please: 'get something', (err, capsule) -> 
        #     emit.Object2 please: 'get something', (err, capsule) -> 
        #     emit.Object2 please: 'get something', (err, capsule) -> 
        # ), 1

        ), 1000


        seq = 0
        emit.use 
            title: 'Local middleware (Pre-Transmission)'
            (next, capsule) -> 

                # console.log wait: capsule.$wait
                capsule.seq = seq++
                next()

