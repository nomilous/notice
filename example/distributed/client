#! /usr/bin/env coffee

notice = require '../../lib/notice'

TelevisionRemote = notice.client(

    capsule: 

        channel: {}
        volume:  {}
        pause:   {}
        play:    {}
        ffwd:    {}

        # uuid: -> 'override uuid generator'

).create "Television Remote #{process.env.NAME}",

    context: 
        supremeAuthority: 'Mother' unless Grandfather? or Saturday?
        batteryLevel: 4 / 9

    connect: 
        adaptor:            'socket.io'
        url:                'https://localhost:10101'
        secret:             process.env.NODE_SECRET
        errorWait:          1000
        rejectUnauthorized: false # tolerate self sighned cert on serverside


    (error, theRemote) -> 

        #
        # callback receives connected theRemote as a notifier,
        # or error
        #

        seq = 0

        return console.log error if error?

        # #
        # # emit capsule with node style callback
        # #
        # 
        # theRemote.volume 'up', amount: 3, (err, capsule) -> 
        #     return console.log 'ERROR', err if err?
        #     console.log capsule.all
        #     console.log capsule

        process.on 'SIGINT', -> 
            console.log '\n', seq
            process.exit()


        time  = Date.now()
        count = 0
        console.log 'seq\tcapsule_rate'

        setInterval (-> 

            seq++

            if seq.toString()[-3..] == '000' 

                deltaC = seq - count
                deltaT = Date.now() - time
                time   = Date.now()
                count  = seq 

                perSecond = Math.floor( deltaC / deltaT * 100000 ) / 100
                console.log "#{seq}\t#{perSecond}"

            #
            # emit capsule with promise waiting
            #

            theRemote.volume( 'up', amount: 3 ).then(

                (capsule) -> #console.log 'Hub acknowledged', capsule._uuid
                (error)   -> console.log error
                (notify)  -> #console.log 'Notify', notify 

                    # 
                    # => Notify { _type: 'control', control: 'transmitted', capsule: ...
                    # => Hub acknowledged 8afa4990-31e4-11e3-94c8-11feca0da255
                    # 

            )

        ), 1
