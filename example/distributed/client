#! /usr/bin/env coffee

notice = require '../../lib/notice'

TelevisionRemote = notice.client(

    messages: 

        channel: {}
        volume:  {}
        pause:   {}
        play:    {}
        ffwd:    {}

        vote:    {}
        impeach: 
            beforeCreate: -> 
                throw new Error 'democracy not configurable'

).create "Television Remote #{process.env.NAME}",

    context: 
        supremeAuthority: 'Mother' unless grandfather? || saturday?

    connect: 
        # address: 'localhost'
        allowUncertified: true # tolerate self sighned cert on serverside
        transport:       'https'
        port:             10101
        secret:           process.env.SECRET
        errorWait:        1000

    (error, client) -> 



        client.use 

            title: 'illustate .info'
            (next, capsule) -> 

                #
                # a usefull idea: the next function has an info property
                # ------------------------------------------------------
                # 
                # * while writing code / tests to have a .info look upper
                # * this simply returns a link to the relevant doc, but
                #   much more could be done
                # * it will be necessary to explore ways to keep it's impact
                #   on the code speed/etc to a minimum
                # 

                # console.log next.info
                next()


        client.use

            title: 'illustrate notifiying the message origin promise'
            (next, capsule) -> 

                if capsule._type == 'volume' then next.notify 'increasing now'
                next()

    
        return console.log error if error?
        # console.log CLIENT: client
        # 
        # # 
        # # message assembly errors reject onto the promise
        # #
        # 
        # client.impeach().then(
        #     (m) -> console.log CAPSULE: m
        #     (e) -> console.log ERROR:   e
        # )

        # #
        # # capsule can be emitted with a callback
        # #
        # 
        # client.channel 1, (err, res) -> 
        #     console.log res
    
        client.volume( 'up', amount: 3 ).then(

            (capsule) -> 
            (error)   -> 
            (notify)  -> console.log NOTIFY: notify 

        )

