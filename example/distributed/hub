#! /usr/bin/env coffee

notice = require '../../lib/notice'

notice.listen 'hub name', {

    listen: 
        
        # server:  existingHttpServer
        # address: '0.0.0.0'
        port:    10101
        secret:  'right'
        cert:    __dirname + '/../../cert/develop-cert.pem'
        key:     __dirname + '/../../cert/develop-key.pem'

} , (err, hub) -> 

    return process.stdout.write err.toString() if err?

    hub.use 
        title: 'first middleware'
        (next, capsule, context) -> 

            if capsule._type == 'control'

                #
                # WARNING, interface design remains in progress!
                #          precise content of these control capsules 
                #          may change without warning
                #
                
                console.log "[#{capsule.control}]", 
                    context.origin.title
                    hostname: context.origin.context.hostname
                    pid: context.origin.context.pid

                return next()


            console.log """
            \ncapsule:
            from: #{context.origin.title} (#{context.origin.context.pid}.#{context.origin.context.hostname})
            socketUptime: #{ (Date.now() - context.origin.connection.stateAt) / 1000} seconds
            """


            next()
