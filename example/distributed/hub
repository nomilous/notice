#! /usr/bin/env coffee

notice = require '../../lib/notice'

MessageHub = notice.hub

    manager: 
        listen: 
            port: 11111
            cert:    __dirname + '/../../cert/develop-cert.pem'
            key:     __dirname + '/../../cert/develop-key.pem'
        authenticate: 
            username: 'nomilous'
            password: 'âˆ†'


MessageHub.create 'hub name', {

    listen: 
        
        adaptor: 'socket.io'
        # server:  existingHttpServer
        # address: '0.0.0.0'
        port:    10101
        secret:  'right'
        cert:    __dirname + '/../../cert/develop-cert.pem'
        key:     __dirname + '/../../cert/develop-key.pem'

} , (err, hub) -> 

    return process.stdout.write err.toString() if err?

    hub.use

        #
        # register middleware (title is required)
        #

        title: 'first middleware'
        (next, capsule, traversal) -> 

            if capsule._type == 'control'

                console.log "[#{capsule.control}]", 
                    traversal.origin.title
                    hostname: traversal.origin.context.hostname
                    pid: traversal.origin.context.pid

                return next()


            console.log """
            \n
            RECEIVED::
                from: #{traversal.origin.title} (#{traversal.origin.context.pid}.#{traversal.origin.context.hostname})
                socketUptime: #{ (Date.now() - traversal.origin.connection.stateAt) / 1000} seconds
            CAPSULE:
                type: #{capsule._type}
                uuid: #{capsule._uuid}
                content: """, capsule

            next()
